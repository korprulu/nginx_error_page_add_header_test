
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    default_type  application/json;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        off;
    keepalive_timeout  65;

    upstream go_app {
        server go_app:8080;
    }

    server {
        listen 80;
        
        # Custom error handling for 403 Forbidden
        error_page 403 /internal/errors/403_custom;
        location = /internal/errors/403_custom {
            internal;

            add_header X-Custom-Header-Z $custom_header always;

            return 403 '{"error":{"code":403,"message":"Forbidden"}}';
        }


        location /has_header {
            auth_request /internal/auth/has_header;
            auth_request_set $custom_header $sent_http_x_custom_header_internal;

            proxy_pass http://go_app/auth_success;

            proxy_hide_header X-Custom-Header-Internal;
        }

        location /has_no_header {
            auth_request /internal/auth/has_no_header;
            auth_request_set $custom_header $sent_http_x_custom_header_internal;

            proxy_pass http://go_app/auth_success;
            
            proxy_hide_header X-Custom-Header-Internal;
        }

        location /internal/auth/has_header {
            internal;

            proxy_pass http://go_app/auth?add_header;
        }

        location /internal/auth/has_no_header {
            internal;

            proxy_pass http://go_app/auth;
        }
    }
}
